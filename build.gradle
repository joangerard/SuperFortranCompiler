println 'Init build'
apply plugin: 'java' // Adding java plugin for gradle



archivesBaseName = 'part1' // Name of jar
libsDirName = '../dist' // Directory to put jar in
buildDir = 'src' // Directory for all generated code

/**
 * Set sources directory for all java code
 */
sourceSets {
    main.java.srcDir "src"
}


/**
 * Attributes for Jar's Manifest
 */
jar {
    manifest {
        attributes(
                'Main-Class': 'Main'
        )
    }
}

/**
 * Specify source and class path for javadoc
 */
javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}


/**
 * Generate lexer using jflex
 */
task compileJflex(type: Exec) {
    println 'Init Jflex execution'
    workingDir 'src'
    commandLine 'jflex', 'LexicalAnalyzer.flex'
}<< {
    println "Jflex executed"
}

/**
 * Compile Java code
 */
compileJava {
    dependsOn compileJflex
}


/**
 * Generate java documentation in doc folder
 */
task generateJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = new File("doc")
}

/**
 * Once the build is done generate Java docs
 */
build.finalizedBy(generateJavadocs)


/**
 * Run jar based on a given argument
 */
task run() << {
    println "$testFile"

    javaexec {
        main = "-jar";
        args = ["dist/part1.jar", "test/$testFile"]
    }
}

//task serveJavaDoc(type: Exec){
//    workingDir 'doc'
//    commandLine 'python', '-m', 'SimpleHTTPServer'
//}

